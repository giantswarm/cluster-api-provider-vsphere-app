---
# Source: cluster-api-provider-vsphere/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test
  namespace: giantswarm
---
# Source: cluster-api-provider-vsphere/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-manager-bootstrap-credentials
  namespace: giantswarm
stringData:
  credentials.yaml: |-
    username: ""
    password: ""
type: Opaque
---
# Source: cluster-api-provider-vsphere/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - haproxyloadbalancers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - haproxyloadbalancers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspherevms
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspherevms/status
  verbs:
  - get
  - patch
  - update
---
# Source: cluster-api-provider-vsphere/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: cluster-api-provider-vsphere/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-manager-role
subjects:
- kind: ServiceAccount
  name: test
  namespace: giantswarm
---
# Source: cluster-api-provider-vsphere/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-proxy-role
subjects:
- kind: ServiceAccount
  name: test
  namespace: giantswarm
---
# Source: cluster-api-provider-vsphere/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    giantswarm.io/monitoring: "true"
    giantswarm.io/monitoring-port: "8443"
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test
  namespace: giantswarm
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  - port: 443
    targetPort: webhook-server
  selector:
      app.kubernetes.io/name: "cluster-api-provider-vsphere"
      app.kubernetes.io/instance: "test"
      cluster.x-k8s.io/provider: vsphere
      app.kubernetes.io/version: "v0.7.6"
---
# Source: cluster-api-provider-vsphere/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-controller-manager
  namespace: giantswarm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "cluster-api-provider-vsphere"
      app.kubernetes.io/instance: "test"
      cluster.x-k8s.io/provider: vsphere
      app.kubernetes.io/version: "v0.7.6"
  template:
    metadata:
      annotations:
        releaseRevision: "1"
      labels:
        app.kubernetes.io/name: "cluster-api-provider-vsphere"
        app.kubernetes.io/instance: "test"
        cluster.x-k8s.io/provider: vsphere
        app.kubernetes.io/version: "v0.7.6"
        app.giantswarm.io/branch: "test"
        app.giantswarm.io/commit: "test"
        app.kubernetes.io/managed-by: "Helm"
        control-plane: test-controller-manager
        helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
        giantswarm.io/service-type: managed
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0"
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        - --enable-leader-election=false
        image: "gcr.io/cluster-api-provider-vsphere/release/manager:v0.7.6"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - name: bootstrap-credentials
          mountPath: /etc/capv
          readOnly: true
      terminationGracePeriodSeconds: 10
      serviceAccountName: test
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: bootstrap-credentials
        secret:
          defaultMode: 420
          secretName: test-manager-bootstrap-credentials
      - name: cert
        secret:
          defaultMode: 420
          secretName: test-cert
---
# Source: cluster-api-provider-vsphere/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-cert
  namespace: giantswarm
spec:
  dnsNames:
  - test-webhook.giantswarm.svc
  - test-webhook.giantswarm.svc.cluster.local
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: selfsigned-giantswarm
  secretName: test-cert
---
# Source: cluster-api-provider-vsphere/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: giantswarm/test-cert
  labels:
    app.kubernetes.io/name: "cluster-api-provider-vsphere"
    app.kubernetes.io/instance: "test"
    cluster.x-k8s.io/provider: vsphere
    app.kubernetes.io/version: "v0.7.6"
    app.giantswarm.io/branch: "test"
    app.giantswarm.io/commit: "test"
    app.kubernetes.io/managed-by: "Helm"
    control-plane: test-controller-manager
    helm.sh/chart: "cluster-api-provider-vsphere-0.0.1"
    giantswarm.io/service-type: managed
  name: test-validating-webhook-configuration
  namespace: giantswarm
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-vspherecluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspherecluster.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - vsphereclusters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-vspheremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspheremachine.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachines
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-vspheremachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspheremachinetemplate.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachinetemplates
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-vspherevm
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspherevm.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspherevms
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-vspherecluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspherecluster.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - vsphereclusters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-vspheremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspheremachine.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachines
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-vspheremachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspheremachinetemplate.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspheremachinetemplates
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: test
      namespace: giantswarm
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-vspherevm
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.vspherevm.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - vspherevms
  sideEffects: None
