apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.giantswarm.io/branch: '{{ .Values.project.branch }}'
    app.giantswarm.io/commit: '{{ .Values.project.commit }}'
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    cluster.x-k8s.io/provider: infrastructure-vsphere
    control-plane: controller-manager
    helm.sh/chart: '{{ .Chart.Name }}'
  name: capv-controller-manager
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-vsphere
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-vsphere
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --logtostderr
        - --v=3
        - --feature-gates=NodeAntiAffinity=false,NodeLabeling=false
        image: '{{.Values.image.name}}:{{.Values.image.tag}}'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          limits:
            cpu: '{{ .Values.resources.limits.cpu }}'
            memory: '{{ .Values.resources.limits.memory }}'
          requests:
            cpu: '{{ .Values.resources.requests.cpu }}'
            memory: '{{ .Values.resources.requests.memory }}'
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/capv
          name: manager-bootstrap-credentials
          readOnly: true
      priorityClassName: '{{ .Values.priorityClass }}'
      serviceAccountName: capv-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capv-webhook-server-cert
      - name: manager-bootstrap-credentials
        secret:
          secretName: capv-manager-bootstrap-credentials
