apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    application.giantswarm.io/branch: '{{ .Values.project.branch }}'
    application.giantswarm.io/commit: '{{ .Values.project.commit }}'
    cluster.x-k8s.io/provider: infrastructure-vsphere
    control-plane: controller-manager
    helm.sh/chart: '{{ .Chart.Name }}'
  name: capv-controller-manager
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-vsphere
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-vsphere
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --leader-elect
            - --v=6
            - --feature-gates=NodeAntiAffinity=false
          image: '{{.Values.image.name}}:{{.Values.image.tag}}'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
            - containerPort: 8443
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          resources:
            limits:
              cpu: '{{ .Values.resources.limits.cpu }}'
              memory: '{{ .Values.resources.limits.memory }}'
            requests:
              cpu: '{{ .Values.resources.requests.cpu }}'
              memory: '{{ .Values.resources.requests.memory }}'
          securityContext:
              {{- with .Values.containerSecurityContext }}
              	{{- . | toYaml | nindent 12 }}
              {{- end }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      priorityClassName: '{{ .Values.priorityClass }}'
      securityContext:
          {{- with .Values.podSecurityContext }}
            {{- . | toYaml | nindent 8 }}
          {{- end }}
      serviceAccountName: capv-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: capv-webhook-server-cert
